S = [];
S.nu = 2;
S.nx = 3;
S.ny = 1;
S.nw = 1;
S.InputName = {'turbo', 'acc'};
S.InputKind = {'b', 'r'};
S.InputLength = {1, 1};
S.StateName = {'position', 'velocity', 'turbocount'};
S.StateKind = {'r', 'r', 'r'};
S.StateLength = {1, 1, 1};
S.OutputName = {'y'};
S.OutputKind = {'r'};
S.OutputLength = {1};
S.AuxName = {'aux_acc'};
S.AuxKind = {'r'};
S.AuxLength = {1};
S.ParameterName = {};
S.ParameterKind = {};
S.ParameterLength = {};
S.xl = [-50;-10;-0];
S.xu = [50;10;5];
S.ul = [0;-1];
S.uu = [1;1];
S.yl = -Inf;
S.yu = Inf;
S.wl = -2;
S.wu = 2;
S.j.xr = [1;2;3];
S.j.xb = [];
S.j.ur = 2;
S.j.ub = 1;
S.j.yr = 1;
S.j.yb = [];
S.j.d = [];
S.j.z = 1;
S.j.w_auto_bin = [];
S.j.eq = zeros(1,0);
S.j.ineq = [1 2 3 4 5 6];
S.J.X = 'rrr';
S.J.U = 'br';
S.J.Y = 'r';
S.J.W = 'r';
S.nxb = 0;
S.nxr = 3;
S.nub = 1;
S.nur = 1;
S.nyb = 0;
S.nyr = 1;
S.nd = 0;
S.nz = 1;
S.A = [1 1 0;0 1 0;0 0 1];
S.Bu = [0 0;0 0;-1 0];
S.Baux = [1;0.5;0];
S.Baff = [0;0;0];
S.C = [1 0 0];
S.Du = [0 0];
S.Daux = 0;
S.Daff = 0;
S.Ex = [-0 -0 -0;-0 -0 -0;-0 -0 -0;-0 -0 -0;-0 -0 -0;-0 -0 -0];
S.Eu = [-0 -0;-0 -0;3 2;3 -2;-3 1;-3 -1];
S.Eaux = [-1;1;-1;1;-1;1];
S.Eaff = [2;2;3;3;0;0];
S.nc = 6;
S.symtable = {struct('name', 'position', 'orig_type', 'state', 'type', 'state', 'kind', 'real'), struct('name', 'velocity', 'orig_type', 'state', 'type', 'state', 'kind', 'real'), struct('name', 'turbocount', 'orig_type', 'state', 'type', 'state', 'kind', 'real'), struct('name', 'turbo', 'orig_type', 'input', 'type', 'input', 'kind', 'bool'), struct('name', 'acc', 'orig_type', 'input', 'type', 'input', 'kind', 'real'), struct('name', 'y', 'orig_type', 'output', 'type', 'output', 'kind', 'real'), struct('name', 'aux_acc', 'orig_type', 'aux', 'type', 'aux', 'kind', 'real')};
S.MLDisvalid = 1;
S.connections.variables = {'turbo(1)', 'acc(1)'};
S.connections.table = zeros(0,2);
S.name = 'turbo_car';
